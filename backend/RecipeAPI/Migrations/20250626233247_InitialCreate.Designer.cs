// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeAPI.Data;

#nullable disable

namespace RecipeAPI.Migrations
{
    [DbContext(typeof(RecipeDbContext))]
    [Migration("20250626233247_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeAPI.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler", (string)null);
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TarifId")
                        .HasColumnType("int");

                    b.Property<string>("Yorum")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("TarifId");

                    b.ToTable("Yorumlar", (string)null);
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("TarifId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("TarifId", "KullaniciId")
                        .IsUnique();

                    b.ToTable("Favoriler", (string)null);
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("Puan")
                        .HasColumnType("int");

                    b.Property<int>("TarifId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("TarifId", "KullaniciId")
                        .IsUnique();

                    b.ToTable("Puanlamalar", (string)null);
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hazirlanis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HazirlikSuresi")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Malzemeler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PisirmeSuresi")
                        .HasColumnType("int");

                    b.Property<string>("Porsiyon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResimUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZorlukDerecesi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Tarifler", (string)null);
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.RecipeImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ResimUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TarifId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TarifId");

                    b.ToTable("TarifResimleri", (string)null);
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Birim")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MalzemeAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Miktar")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TarifId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TarifId");

                    b.ToTable("TarifMalzemeler", (string)null);
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("KullaniciAdi")
                        .IsUnique();

                    b.ToTable("Kullanicilar", (string)null);
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.Comment", b =>
                {
                    b.HasOne("RecipeAPI.Models.Entities.User", "Kullanici")
                        .WithMany("Yorumlar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RecipeAPI.Models.Entities.Recipe", "Tarif")
                        .WithMany("Yorumlar")
                        .HasForeignKey("TarifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Tarif");
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.Favorite", b =>
                {
                    b.HasOne("RecipeAPI.Models.Entities.User", "Kullanici")
                        .WithMany("Favoriler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RecipeAPI.Models.Entities.Recipe", "Tarif")
                        .WithMany("Favoriler")
                        .HasForeignKey("TarifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Tarif");
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.Rating", b =>
                {
                    b.HasOne("RecipeAPI.Models.Entities.User", "Kullanici")
                        .WithMany("Puanlamalar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RecipeAPI.Models.Entities.Recipe", "Tarif")
                        .WithMany("Puanlamalar")
                        .HasForeignKey("TarifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Tarif");
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.Recipe", b =>
                {
                    b.HasOne("RecipeAPI.Models.Entities.Category", "Kategori")
                        .WithMany("Tarifler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RecipeAPI.Models.Entities.User", "Kullanici")
                        .WithMany("Tarifler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.RecipeImage", b =>
                {
                    b.HasOne("RecipeAPI.Models.Entities.Recipe", "Tarif")
                        .WithMany("TarifResimleri")
                        .HasForeignKey("TarifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarif");
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("RecipeAPI.Models.Entities.Recipe", "Tarif")
                        .WithMany("TarifMalzemeler")
                        .HasForeignKey("TarifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarif");
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.Category", b =>
                {
                    b.Navigation("Tarifler");
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.Recipe", b =>
                {
                    b.Navigation("Favoriler");

                    b.Navigation("Puanlamalar");

                    b.Navigation("TarifMalzemeler");

                    b.Navigation("TarifResimleri");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("RecipeAPI.Models.Entities.User", b =>
                {
                    b.Navigation("Favoriler");

                    b.Navigation("Puanlamalar");

                    b.Navigation("Tarifler");

                    b.Navigation("Yorumlar");
                });
#pragma warning restore 612, 618
        }
    }
}
